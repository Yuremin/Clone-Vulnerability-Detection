import sys
import cparser as cp
from hashlib import md5
from tkinter import *
from tkinter import messagebox





def generate_cli(target_path, is_abstraction):
    if is_abstraction.lower() == "on":
        abstract_level = 4
    else:
        abstract_level = 0
				
    filelist = cp.load_directory(target_path)
    num_file = len(filelist)
    
    if num_file == 0:
        print("[-] Error: Failed to load source files")
        print("    Check if you selected the proper directory, or if your project contains .c or .cpp files")
        sys.exit()

    for file in filelist:
        if abstract_level == 0:
            function_instance_list = cp.parsefile_shallow(file)
        else:
            function_instance_list = cp.parsefile_deep(file)


    for f in function_instance_list:
        path = f.parent_file
        abstract_body = cp.abstraction(f, abstract_level)[1]
        abstract_body = cp.normalization(abstract_body)
        func_len = len(abstract_body)

        if func_len > 50:
            hashvalue = md5(abstract_body.encode()).hexdigest()
            print(hashvalue)


        else:
            print("fuck")

def run_cli():
    pass


def run_gui():
    root = Tk()
    root.geometry("600x450+374+182")
    root.title("LCVD检测系统")
    button = Button(root, text="生成指纹",command=generate_cli("../data", "off"))
    button.pack(side="top")
    root.mainloop()
 

def main():
    run_gui()
   #generate_cli("../data", "off")



if __name__=="__main__":
    main()
